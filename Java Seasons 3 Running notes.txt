*********************************
Java Season - 3
*********************************

File Handling 

1) Excel 
2) Properties 
3) JSON 

----------------------------
Maven
----------------------------

It's a build or project mangement tool 

Apache Community --> Maven

Download and Configure :


https://maven.apache.org/download.cgi

Binary zip archive	apache-maven-3.9.9-bin.zip 

Extract the zip 

Configuration : in Environment variables

MAVEN_HOME D:\FLM5thDec\jars\apache-maven-3.9.9-bin\apache-maven-3.9.9

M2_HOME D:\FLM5thDec\jars\apache-maven-3.9.9-bin\apache-maven-3.9.9\bin

path D:\FLM5thDec\jars\apache-maven-3.9.9-bin\apache-maven-3.9.9\bin


in cmd :

check below command 

mvn -version

C:\Users\Riyaz>mvn -verison
Apache Maven 3.9.9 (8e8579a9e76f7d015ee5ec7bfcdc97d260186937)
Maven home: D:\FLM5thDec\jars\apache-maven-3.9.9-bin\apache-maven-3.9.9
Java version: 11.0.25, vendor: Oracle Corporation, runtime: C:\Program Files\Java\jdk-11
Default locale: en_IN, platform encoding: Cp1252
OS name: "windows 11", version: "10.0", arch: "amd64", family: "windows"

						developer						tester
src/main/java   --> app java files 						Framework java files 
src/main/resources --> app data file (non-java)			Framework non-java files (properties )
src/test/java --> junit test cases (java files)			Test Scripts (java files)
src/test/resources --> test data files (non-java )      Test Data (excels, jsons etc..) or Reports or Screenshots 

pom.xml --> heart of maven project 

pom means Project Object Model 



---------------------
File Handling
---------------------
java.io 
File (C) : 

File(String) here String is path of file including extension 

createNewFile():boolean 


Folder : 

mkdir():boolean 

----------------------------
Excel Read and Write
----------------------------

apache community --> Apache POI jars 

org.apache.poi » poi
org.apache.poi » poi-ooxml
org.apache.poi » poi-scratchpad
org.apache.poi » poi-excelant
												Microsoft Excel Worksheet (.xlsx)
		.xls									.xlsx

		HSSFWorkbook		Workbook 		XSSFWorkbook		
		HSSFSheet			Sheet			XSSFSheet
		HSSFRow				Row 			XSSFRow
		HSSFCell			Cell 			XSSFCell 
		
		
FileInputStream (C)

FileInputStream(File)
FileInputStream(FileDescriptor)
FileInputStream(String)  ==> here String is path of the file including extension


XSSFWorkbook (C) :

XSSFWorkbook()
XSSFWorkbook(File)
XSSFWorkbook(InputStream) ==> InputStream is the object of FileInputStream
XSSFWorkbook(InputStream, boolean)
XSSFWorkbook(String)
XSSFWorkbook(OPCPackage)
XSSFWorkbook(PackagePart)
XSSFWorkbook(XSSFFactory)
XSSFWorkbook(XSSFWorkbookType)									
								
								
XSSFSheet(C):

no direct constructors but you can use below methods of XSSFWorkbook						

getSheet(String)
getSheetAt(int)						
								

-----------------------------------------------------
Day : 20th Mar - Thursday
-----------------------------------------------------								  
								
--------------------
Methods in XSSFSheet
--------------------								
								
getLastRowNum():int ==> counts starts from zero 

getPhysicalNumberOfRows():int ==> counts starts from 1 count will be increment only if the has atleast one cell

getRow(int):XSSFRow ==> here int is rownum , rownum starts from zero 

								
--------------------
Methods in XSSFRow
--------------------									

getLastCellNum():int ==> counts starts from one  

getPhysicalNumberOfCells():int ==> counts starts from 1 count will be increment only if the cell is not empty 

getCell(int): XSSFCell ==> here int is cellnum , cellnum starts from zero

--------------------
Methods in XSSFCell
--------------------

getCellType():CellType ==> here CellType is enum 


------------------
Excel Write
-------------------
Case 1 : modifying an existing cell 

Case 2: Creating a cell in existing row 

Case 3: Creating a Row and Cell in it 

------------------------------------
Properties File 
-----------------------------------
file having an extension .properties

mainly used to store key value pairs 

--------------------------------------------------
Day : 21st Mar - Friday
--------------------------------------------------

--------------
HashMap
--------------

Collections are mainly use to store idividual items 

Map is used to store Key value pairs 
where Key can be of any type
Value also can be of same or any other 

-------------------------
Methods in Map (I)
--------------------------

put(K, V):V --> K is key of any DataType & V is value of any DataType

get(Object):V --> Object is Key 

remove(Object):V 

size():int --> no of key value pairs 

isEmpty():boolean 

keySet():Set<K> 

containsKey(Object):boolean
containsValue(Object):boolean


